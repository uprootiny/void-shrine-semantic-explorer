server {
    listen 80;
    server_name void-shrine.dissemblage.art;
    
    # Redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name void-shrine.dissemblage.art;
    
    # SSL configuration (certificates to be added)
    ssl_certificate /etc/letsencrypt/live/void-shrine.dissemblage.art/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/void-shrine.dissemblage.art/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # Modern configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # Security headers for chaos protection
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    
    # Void Shrine custom headers
    add_header X-Void-Status "ACTIVE" always;
    add_header X-Entropy-Source "QUANTUM" always;
    add_header X-Chaos-Level "MAXIMUM" always;
    
    # Rate limiting for chaos control
    limit_req_zone $binary_remote_addr zone=chaos:10m rate=10r/s;
    limit_req zone=chaos burst=20 nodelay;
    
    # Proxy to Clojure application
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support for real-time entropy
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts optimized for chaos generation
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # API endpoints with special handling
    location /api/ {
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS for chaos manipulation
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # Static assets (if any)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://127.0.0.1:3000/api/state;
        access_log off;
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(clj|edn|jar)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error pages for the void
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        return 404 '<!DOCTYPE html><html><body style="background:#000;color:#ff0066;font-family:monospace;text-align:center;padding:2rem;"><h1>404 - Lost in the Void</h1><p>The entropy you seek has dissipated into the quantum foam.</p></body></html>';
    }
    
    location = /50x.html {
        return 500 '<!DOCTYPE html><html><body style="background:#000;color:#ff0066;font-family:monospace;text-align:center;padding:2rem;"><h1>500 - Chaos Overflow</h1><p>The void has consumed this endpoint. Try again when the entropy stabilizes.</p></body></html>';
    }
    
    # Logging configuration
    access_log /var/log/nginx/void-shrine.access.log combined;
    error_log /var/log/nginx/void-shrine.error.log warn;
}